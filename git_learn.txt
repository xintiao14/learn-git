
教程来源链接：
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000

安装git
在命令行中输入 git 来查看当前系统是否安装了Git
Linux下
	sudo apt-get install git
Window下
	官网下载安装程序
	安装完成后，在命令行输入
	git config --global user.name "Your name"
	git config --global user.email "email@example.com"

创建版本库
	进入需要管理的目录，通过 git init 初始化一个Git仓库；
	通过 git add <file> 将文件修改提交到暂存区
	通过 git commit 将暂存区的文件提交到版本库
	
git status 了解当前仓库的状态；
git diff 查看修改的内容
git log 显示从最近到最远的提交历史日志；  加上 --pretty=oneline 可以使输出信息简化
git reflog 查看由近到远的提交和回滚的历史日志
git reset --hard id 制定回到id版本；
git checkout -- <file> 把文件在工作区的修改全部撤销，分两种情况：
	1. 文件修改后没有提交到暂存区，撤销修改就是回到和版本库一样的状态；
	2. 文件添加到暂存区后修改，撤销修改就是回到暂存区的状态。 
	总之，是回到文件最近一次 git commit 或 git add 时的状态
git reset HEAD <file> 可以把暂存区的修改撤销掉
git rm 用于删除一个文件，该指令只是把修改提交到暂存区，若用删掉版本库中文件，还需输入 git commit 提交

由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：
	第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
	ssh-keygen -t rsa -C "email@example"
	如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人
	第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：
	然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：
	点“Add Key”，你就应该看到已经添加的Key：
	为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。
	当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。

create a new repository on the command line
	echo "# learn-git" >> README.md
	git init
	git add README.md
	git commit -m "first commit"
	git remote add origin git@github.com:xintiao14/learn-git.git
	git push -u origin master
push an existing repository from the command line
	git remote add origin git@github.com:xintiao14/learn-git.git
	git push -u origin master
	要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
	关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
	此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
从远程库克隆
	git clone git@github.com:xintiao14/learn_git.git
	
分支管理
	git branch:查看分支
	git branch <name>:创建分支
	git checkout <name>:切换分支
	git checkout -b <name>:创建+切换分支
	git merge <name>:合并某分支到当前分支
	git branch -d <name>:删除分支
	
多远程库	
	git remote -v: 查看远程库信息
	git remote rm origin: 删除已关联的名为origin的远程库
	自定义不同名称来标识不同的远程库
	git remote add github git@github.com:xintiao14/learn-git.git: 关联GitHub的远程库
	git remote add gitee git@gitee.com:xintiao14/learn-git.git: 关联码云远程库




